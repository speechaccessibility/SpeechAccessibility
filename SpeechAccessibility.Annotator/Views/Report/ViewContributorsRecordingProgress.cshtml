@{
    ViewData["Title"] = "View Contributors Recording Progress";
}
@{
    ViewBag.Title = "Contributors Recording Progress";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.22/css/jquery.dataTables.min.css" />
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/responsive/2.2.6/css/responsive.dataTables.min.css" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<h1>View Contributors Recording Progress</h1>

<table>
    <tr>
        <td colspan="2"><b>Select a date range for Contributor's approved date: </b></td>
    </tr>
    <tr>
        <td>Start Date:<input class="form-control" id="startdt" name="startdt" type="date" /></td>
        <td>End Date:<input class="form-control" id="enddt" name="enddt" type="date" />
        <td>
            <input type="button" id="submitdate" name="submitdate" value="Submit" style="margin-top:21px; margin-left:25px;" />
        </td>
    </tr>
</table>

<br />
<div style="width: 100%">
    <table class="table table-striped table-bordered table-hover" id="ContributorsProgressTable" cellspacing="0" align="center"></table>
</div>

@section scripts {
    <script src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.2.6/js/dataTables.responsive.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery-scrollTo/2.1.2/jquery.scrollTo.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $('input:button[name="submitdate"]').click(function () {
                var sdate = $("#startdt").val();
                var edate = $("#enddt").val();
                var today = new Date();
                today = formatDate(today);

                if (sdate > today) {
                    alert("Start date cannot be in the future.");
                    return false;
                } else if (edate && edate < sdate) {
                    alert("End date cannot be older than start date.");
                    return false;
                } else if ((!sdate && edate) || (sdate && !edate)) {
                    alert("Please enter both start and end dates or leave both fields empty to fetch all the contributors list.");
                    return false;
                }
                else {
                    //return false;
                    //getContributorsProgress(sdate, edate);
                    if ($.fn.DataTable.isDataTable('#ContributorsProgressTable')) {
                        $('#ContributorsProgressTable').DataTable().destroy();
                    }

                    var ogetContributorsProgress = $("#ContributorsProgressTable").on('error.dt',
                        function (e, settings, techNote, message) {
                            alert('Error loading the data. It could be the timeout issue. Please try to reload your browser. ', message);
                        }).DataTable({
                            "serverSide": true,
                            "processing": true,
                            "responsive": true,
                            "iDisplayLength": 100,
                            "dom": "<'row'<'col-sm-4'l><'col-sm-4'i><'col-sm-4'f>>" +
                                "<'row'<'col-sm-12'tr>>p",
                            "ajax": ({
                                "url": '@Url.Action("GetContributorsRecordingProgressforSelectedDates", "Report")',
                                "data": { 'startdate': $('input[name=startdt]').val(), 'enddate': $('input[name=enddt]').val() },
                                "type": "POST",
                                "datatype": "json"
                            }),
                            "bAutoWidth": false,
                            "aaSorting": [[3, 'desc']],
                            "oLanguage": {
                               "sSearch": "Search only For Name and ID"
                             },
                            "columns": [
                                {
                                    "title": "Contributor ID",
                                    "data": "contributorId",
                                    "searchable": true,
                                    "orderable": true,
                                    "visible": true,
                                    "name": "ContributorId"
                                },
                                {
                                    "title": "FirstName",
                                    "data": "firstName",
                                    "searchable": true,
                                    "orderable": true,
                                    "visible": true,
                                    "name": "FirstName"
                                },
                                 {
                                    "title": "LastName",
                                    "data": "lastName",
                                    "searchable": true,
                                    "orderable": true,
                                    "visible": true,
                                    "name": "LastName"
                                },
                                {
                                    "title": "Approved Date",
                                    "data": "approveTS",
                                    "searchable": true,
                                    "orderable": true,
                                    "visible": true,
                                    "name": "ApproveTS",
                                    'render': function (data) {
                                        var date = new Date(data);
                                        var month = date.getMonth() + 1;
                                        return (month.toString().length > 1 ? month : "0" + month) + "/" + date.getDate() + "/" + date.getFullYear() + "&nbsp;" + (date.getHours() < 10 ? ("0" + date.getHours()) : date.getHours()) + ":" + (date.getMinutes() < 10 ? ("0" + date.getMinutes()) : date.getMinutes());
                                    },
                                },
                                {
                                    "title": "Last Recording Time",
                                    "data": "recordCreateTS",
                                    "searchable": true,
                                    "orderable": true,
                                    "visible": true,
                                    "name": "RecordCreateTS",
                                    'render': function (data) {
                                        var date = new Date(data);
                                        var month = date.getMonth() + 1;
                                        return (month.toString().length > 1 ? month : "0" + month) + "/" + date.getDate() + "/" + date.getFullYear() + "&nbsp;" + (date.getHours() < 10 ? ("0" + date.getHours()) : date.getHours()) + ":" + (date.getMinutes() < 10 ? ("0" + date.getMinutes()) : date.getMinutes());
                                    },
                                },
                                {
                                    "title": "Last Recorded Prompt",
                                    "data": "blockDescription",
                                    "searchable": true,
                                    "orderable": false,
                                    "visible": true,
                                    "name": "BlockDescription"
                                }
                            ],
                            "ordering": true,
                            "paging": true,
                            "pageLength": 100,
                            "lengthMenu": [[25, 50, 100, 3000], [25, 50, 100, 3000]]
                        });
                }
            });

            function formatDate(date) {
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                return [year, month, day].join('-');
            }

        });
    </script>
}