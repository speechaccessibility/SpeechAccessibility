@using System.Security.Claims
@model List<SpeechAccessibility.Core.Models.Recording>
@{
    Layout = null;
}
@{
    if (Model.Count > 0)
    {
        <input type="hidden" id="hidContributorId" name="hidContributorId" value="@Model[0].ContributorId" />
    }
}

<table class="table table-sm" id="SITRecording-table">
   
    <tr role="row">
        <th aria-label="Transcript">RecordingID</th>
        <th aria-label="Transcript">Transcript</th>
        <th aria-label="Recording Date" style="width: 150px;">Recording Date</th>
        <th aria-label="RetryCount">RetryCount</th>
        <th aria-label="Comment">Comment</th>
        <th aria-label="Actions" style="width: 150px">Actions</th>
    </tr>
    @foreach (var recording in Model)
    {
        <tr>
            <td>@recording.Id</td>
            <td aria-label="Transcript">@recording.OriginalPrompt.Transcript</td>
            <td aria-label="Recording Date">@recording.CreateTS.ToString("MM/dd/yyyy HH:mm")</td>
            <td aria-label="RetryCount">@recording.RetryCount</td>
            <td aria-label="Comment">@recording.Comment</td>
            <td aria-label="Actions">
                <input type="hidden" id="FilePath" name="FilePath" value="@recording.SpeechFilePath"/>

                @* <a href="#" class="listen">Listen</a>*@
                @{
                    var userRole = @User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;

                    if (userRole is "SLPAnnotator" or "SLPAnnotatorAdmin" or "SystemAdmin")
                    {
                        //give SLP option to listen and rate the recordings after the contributor is already approved
                        <text> <a href="#" class="rate">Listen & Rate</a></text>
                    }
                    else if (userRole is "ExternalSLPAnnotator")
                    {
                        //LSVT can only listen
                        <text> <a href="#" class="listen">Listen</a></text>
                    }
                }

            </td>
        </tr>
    }
   
</table>
<script language="javascript" type="text/javascript">
   
    $(document).ready(function () {
          //combin listen and rate buttons into one dialog
            //listen the recording
        $('#SITRecording-table').on('click', 'a.listen', function (e) {
                e.preventDefault();
                //DownloadSpeechFile
               
            var filePath = $('input[type=hidden]', $(this).closest("td")).val();           
             $("#lblListenContributorId").text($("#hidContributorId").val());
                $("#lblListenTranscript").text($(this).closest('tr').find('td:eq(1)').text());
                var audio = document.getElementById('listenRecording');
                audio.setAttribute("src", filePath);
                audio.load();
                var dialog = $("#listen-dialog");
                listenRecording(audio, dialog);
                $("#listen-dialog").dialog('open');
                return false;


                //var selectedRowData = oSpeechFileTable.row($(this).closest('tr'));
                //var row = selectedRowData.data();
                // $("#lblListenContributorId").text(row.contributorId);
                //$("#lblListenTranscript").text(row.modifiedTranscript);
                //$("#hidFileName").val(row.speechFilePath);
                //var audio = document.getElementById('listenRecording');
                //audio.setAttribute("src", row.speechFilePath);
                //audio.load();
                //var dialog = $("#listen-dialog");
                //listenRecording(audio, dialog);
                //$("#listen-dialog").dialog('open');
                //return false;
            });


      
        $('#SITRecording-table').on('click', 'a.rate', function (e) {
                e.preventDefault();
                
                var recordingId = $(this).closest('tr').find('td:eq(0)').text();
                var getUrl = "@Url.Action("RateSpeechFiles", "SpeechFile")?recordingId=" + recordingId;
               
                getRecordingInformation(getUrl);
            $("#listen-dialog").dialog('open');
                return false;
            });
        function getRecordingInformation(getUrl) {
            $("#listen-dialog").dialog({
                    title: "Listen and Rate Recording",
                    autoOpen: false,
                    resizable: false,
                    width: 1000,
                    height: 800,
                    show: { effect: 'drop', direction: "up" },
                    modal: true,
                    draggable: true,
                    closeOnEscape: true,
                    position: { my: "left top", at: "left+50 top+30", of: window },

                    open: function () {
                        $(this).load(getUrl);
                      
                    },
                    close: function () {

                    },
                    buttons: {
                        submit: function(){                       
                        
                            var recordingId = $("#hidRecordingId").val();               
                            var dimensions = $('[name="Dimension"]');
                            var dimenstionArray = [];

                            $.each(dimensions, function () {
                                var $this = $(this);
                                // check if the checkbox is checked
                                if ($this.is(":checked")) {
                                    //alert($this.val());
                                    var elementName = "dlSeverityLevel_" + this.value
                                    var ratingLevel = document.getElementById(elementName);                                   
                                    var ratingLevelVal= null;
                                    var comment = null;
                                    if (ratingLevel == null || typeof ratingLevel == "undefined") //this is a textbox rating prompt
                                    {                                      
                                        var txtSeverityLevel = document.getElementById('txtSeverityLevel_' + this.value);
                                        comment = $(txtSeverityLevel).val();
                                    }
                                    else
                                    {                                        
                                        ratingLevelVal= ratingLevel.options[ratingLevel.selectedIndex].value;
                                    }
                                    
                                    var otherText = "";
                                    var otherLabel = document.getElementById("lblDimension_" + this.value);
                                    if (otherLabel.innerHTML.trim() == "Other") {
                                        var otherTextBox = document.getElementById("txtOther_" + this.value);
                                        otherText = $(otherTextBox).val();
                                    }

                                    jsonObject = {
                                        "RecordingId": recordingId,
                                        "DimensionId": this.value,
                                        "RatingLevel": ratingLevelVal,
                                        "Comment": comment,
                                        "Other": otherText
                                    };
                                    dimenstionArray.push(jsonObject);
                                }
                            });//end each loop

                            var recording = {
                                "Id": recordingId,
                                "Comment": $("#txtRecordingComment").val(),
                                "RecordingRating": dimenstionArray
                            }

                            $.ajax({
                                url: '@Url.Action("RateSpeechFiles", "SpeechFile")',
                                type: "POST",
                                data: { "recordingForRating": recording },
                                success: function (response) {
                                    if (response.success === true) {
                                    $("#listen-dialog").dialog('close');
                                    } 
                                    else {
                                        alert(response.message);
                                }
                                },
                                    error: function () { alert('Error Rate Recording! It could be the timeout issue. Please try to reload your browser.'); }
                                });     


                        },
                        close: function () {

                            $(this).dialog('close');
                        }
                    }

                });
            }


        
         ////listen the recording
         //   $('#SITRecording-table').on('click', 'a.listen', function (e) {
         //       e.preventDefault();
         //   $("#lblListenContributorId").text($("#hidContributorId").val());
         //   $("#lblListenTranscript").text($(this).closest('tr').find('td:eq(1)').text());

         //   var filePath = $('input[type=hidden]', $(this).closest("td")).val();
         //   var audio = document.getElementById('listenRecording');

         //   audio.setAttribute("src", filePath);
         //       audio.load();
         //       var dialog = $("#listen-dialog");
         //       listenRecording(audio, dialog);
               
         //       $("#listen-dialog").dialog('open');
         //       return false;
         //   });

    });//End document ready



</script>